{"file":"E:\\Curso JS\\Deploy\\Commerce\\backend\\tests\\middlewares\\auth.test.ts","mappings":"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","names":[],"sources":["E:\\Curso JS\\Deploy\\Commerce\\backend\\tests\\middlewares\\auth.test.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { authenticateToken } from '../../src/middlewares/auth';\r\n\r\n// Mock do jwt\r\njest.mock('jsonwebtoken');\r\nconst mockJwt = jwt as jest.Mocked<typeof jwt>;\r\n\r\ndescribe('Auth Middleware', () => {\r\n  let mockRequest: Partial<Request>;\r\n  let mockResponse: Partial<Response>;\r\n  let mockNext: NextFunction;\r\n\r\n  beforeEach(() => {\r\n    mockRequest = {\r\n      headers: {}\r\n    };\r\n    mockResponse = {\r\n      status: jest.fn().mockReturnThis(),\r\n      json: jest.fn().mockReturnThis()\r\n    };\r\n    mockNext = jest.fn();\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('authenticateToken', () => {\r\n    it('should authenticate valid token', async () => {\r\n      const token = 'valid.jwt.token';\r\n      const decodedToken = { id: 1, role: 'customer' };\r\n\r\n      mockRequest.headers = {\r\n        authorization: `Bearer ${token}`\r\n      };\r\n\r\n      mockJwt.verify.mockImplementation((token: any, secret: any, callback: any) => {\r\n        callback(null, decodedToken);\r\n      });\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockJwt.verify).toHaveBeenCalledWith(token, process.env.JWT_SECRET, expect.any(Function));\r\n      expect((mockRequest as any).user).toEqual(decodedToken);\r\n      expect(mockNext).toHaveBeenCalled();\r\n      expect(mockResponse.status).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should reject request without authorization header', async () => {\r\n      mockRequest.headers = {};\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(401);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token de acesso requerido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should reject request with invalid authorization format', async () => {\r\n      mockRequest.headers = {\r\n        authorization: 'InvalidFormat'\r\n      };\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(401);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token de acesso requerido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should reject request with invalid token', async () => {\r\n      const token = 'invalid.jwt.token';\r\n\r\n      mockRequest.headers = {\r\n        authorization: `Bearer ${token}`\r\n      };\r\n\r\n      mockJwt.verify.mockImplementation((token: any, secret: any, callback: any) => {\r\n        callback(new Error('Invalid token'), null);\r\n      });\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockJwt.verify).toHaveBeenCalledWith(token, process.env.JWT_SECRET, expect.any(Function));\r\n      expect(mockResponse.status).toHaveBeenCalledWith(403);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token inválido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should reject request with expired token', async () => {\r\n      const token = 'expired.jwt.token';\r\n\r\n      mockRequest.headers = {\r\n        authorization: `Bearer ${token}`\r\n      };\r\n\r\n      mockJwt.verify.mockImplementation((token: any, secret: any, callback: any) => {\r\n        const error = new Error('Token expired');\r\n        error.name = 'TokenExpiredError';\r\n        callback(error, null);\r\n      });\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(403);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token inválido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle malformed token', async () => {\r\n      const token = 'malformed.token';\r\n\r\n      mockRequest.headers = {\r\n        authorization: `Bearer ${token}`\r\n      };\r\n\r\n      mockJwt.verify.mockImplementation((token: any, secret: any, callback: any) => {\r\n        const error = new Error('Malformed token');\r\n        error.name = 'JsonWebTokenError';\r\n        callback(error, null);\r\n      });\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(403);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token inválido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle unexpected errors', async () => {\r\n      const token = 'valid.jwt.token';\r\n\r\n      mockRequest.headers = {\r\n        authorization: `Bearer ${token}`\r\n      };\r\n\r\n      mockJwt.verify.mockImplementation((token: any, secret: any, callback: any) => {\r\n        callback(new Error('Unexpected error'), null);\r\n      });\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(403);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token inválido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle token without Bearer prefix', async () => {\r\n      const token = 'valid.jwt.token';\r\n\r\n      mockRequest.headers = {\r\n        authorization: token\r\n      };\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(401);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token de acesso requerido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle empty token after Bearer', async () => {\r\n      mockRequest.headers = {\r\n        authorization: 'Bearer '\r\n      };\r\n\r\n      await authenticateToken(mockRequest as Request, mockResponse as Response, mockNext);\r\n\r\n      expect(mockResponse.status).toHaveBeenCalledWith(401);\r\n      expect(mockResponse.json).toHaveBeenCalledWith({ error: 'Token de acesso requerido' });\r\n      expect(mockNext).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n});\r\n"],"version":3}