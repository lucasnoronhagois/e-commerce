{"file":"E:\\Curso JS\\Deploy\\Commerce\\backend\\src\\middlewares\\auth.ts","mappings":";;;;;;AACA,gEAA+B;AAMxB,MAAM,iBAAiB,GAAG,CAAC,GAAgB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvF,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,OAAO,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,iBAAiB,EAAE,CAAC,GAAQ,EAAE,IAAS,EAAE,EAAE;QAC5F,IAAI,GAAG,EAAE,CAAC;YACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC3D,CAAC;QACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAfW,QAAA,iBAAiB,qBAe5B;AAEK,MAAM,YAAY,GAAG,CAAC,GAAgB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAClF,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;QAC1C,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC;SAAM,CAAC;QACN,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,wCAAwC,EAAE,CAAC,CAAC;IACnF,CAAC;AACH,CAAC,CAAC;AANW,QAAA,YAAY,gBAMvB","names":[],"sources":["E:\\Curso JS\\Deploy\\Commerce\\backend\\src\\middlewares\\auth.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\n\r\ninterface AuthRequest extends Request {\r\n  user?: any;\r\n}\r\n\r\nexport const authenticateToken = (req: AuthRequest, res: Response, next: NextFunction) => {\r\n  const authHeader = req.headers['authorization'];\r\n  const token = authHeader && authHeader.split(' ')[1];\r\n\r\n  if (!token) {\r\n    return res.status(401).json({ error: 'Token de acesso requerido' });\r\n  }\r\n\r\n  return jwt.verify(token, process.env.JWT_SECRET || 'fallback_secret', (err: any, user: any) => {\r\n    if (err) {\r\n      return res.status(403).json({ error: 'Token invÃ¡lido' });\r\n    }\r\n    req.user = user;\r\n    return next();\r\n  });\r\n};\r\n\r\nexport const requireAdmin = (req: AuthRequest, res: Response, next: NextFunction) => {\r\n  if (req.user && req.user.role === 'admin') {\r\n    return next();\r\n  } else {\r\n    return res.status(403).json({ error: 'Acesso negado. Apenas administradores.' });\r\n  }\r\n};\r\n"],"version":3}